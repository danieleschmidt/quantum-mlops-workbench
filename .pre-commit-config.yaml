repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-added-large-files
        args: ['--maxkb=1024']

  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.9
        args: ['--line-length=88']

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [--strict, --ignore-missing-imports]
        exclude: ^(tests/|docs/)

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', 'src/', '-f', 'json', '-o', 'bandit-report.json']
        exclude: ^tests/

  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ["--convention=google"]
        additional_dependencies: [toml]

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown, json]
        exclude: ^(\.github/|docs/_build/)

  - repo: local
    hooks:
      - id: quantum-circuit-validation
        name: Validate Quantum Circuits
        entry: python -c "print('✓ Quantum circuit validation placeholder')"
        language: system
        files: \.py$
        pass_filenames: false

      - id: requirements-check
        name: Check Requirements Consistency
        entry: python -c "
import sys
try:
    import pkg_resources
    print('✓ Requirements check passed')
except Exception as e:
    print(f'⚠ Requirements check failed: {e}')
    sys.exit(1)
"
        language: system
        files: ^(requirements.*\.txt|pyproject\.toml)$
        pass_filenames: false
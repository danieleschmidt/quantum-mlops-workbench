[tool:pytest]
# Pytest configuration for Quantum MLOps

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, external dependencies)
    hardware: Hardware tests (require quantum hardware access)
    simulation: Simulation tests (use quantum simulators)
    chaos: Chaos engineering tests (error injection, fault tolerance)
    load: Load tests (performance, scalability)
    slow: Slow tests (> 5 seconds)
    quick: Quick tests (< 1 second)
    gpu: Tests requiring GPU access
    pennylane: PennyLane-specific tests
    qiskit: Qiskit-specific tests
    cirq: Cirq-specific tests
    braket: AWS Braket-specific tests

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=quantum_mlops
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --cov-branch
    --junitxml=test-results/junit.xml

# Minimum version
minversion = 7.0

# Test environment
env =
    PYTHONPATH = {toxinidir}/src
    QUANTUM_ENV = testing
    QUANTUM_BACKEND = simulation

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pennylane.*
    ignore::UserWarning:qiskit.*
    ignore::FutureWarning:torch.*

# Timeout for tests (in seconds)
timeout = 300

# Parallel execution
addopts = -n auto
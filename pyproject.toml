[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quantum-mlops-workbench"
version = "0.1.0"
description = "End-to-end Quantum Machine Learning CI/CD template"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Daniel Schmidt", email = "contact@example.com"},
]
keywords = ["quantum", "machine-learning", "mlops", "qml", "pennylane", "qiskit"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "numpy>=1.21.0",
    "torch>=1.12.0",
    "scikit-learn>=1.0.0",
    "mlflow>=2.0.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
pennylane = [
    "pennylane>=0.33.0",
    "pennylane-lightning>=0.33.0",
]
qiskit = [
    "qiskit>=0.45.0",
    "qiskit-machine-learning>=0.7.0",
]
cirq = [
    "cirq>=1.2.0",
    "cirq-core>=1.2.0",
]
aws = [
    "amazon-braket-sdk>=1.70.0",
]
ibm = [
    "qiskit-ibm-runtime>=0.20.0",
]
all = [
    "quantum-mlops-workbench[pennylane,qiskit,cirq,aws,ibm]",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/quantum-mlops-workbench"
Documentation = "https://quantum-mlops.readthedocs.io"
Repository = "https://github.com/yourusername/quantum-mlops-workbench.git"
Issues = "https://github.com/yourusername/quantum-mlops-workbench/issues"

[project.scripts]
quantum-mlops = "quantum_mlops.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
quantum_mlops = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_reexport = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "quantum: marks tests that require quantum backends",
    "hardware: marks tests that require real quantum hardware",
    "simulation: marks tests that use quantum simulators only",
]

[tool.coverage.run]
source = ["src"]
parallel = true
context = "${CONTEXT}"

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
sort = "Cover"
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
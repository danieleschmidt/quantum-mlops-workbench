# Kubernetes secrets template for Quantum MLOps
# NOTE: This is a template - real secrets should be created separately
apiVersion: v1
kind: Secret
metadata:
  name: quantum-secrets
  namespace: quantum-mlops
  labels:
    app: quantum-mlops
    component: secrets
type: Opaque
data:
  # IBM Quantum credentials (base64 encoded)
  IBM_QUANTUM_TOKEN: <BASE64_ENCODED_IBM_TOKEN>
  
  # AWS credentials for Braket
  AWS_ACCESS_KEY_ID: <BASE64_ENCODED_AWS_KEY>
  AWS_SECRET_ACCESS_KEY: <BASE64_ENCODED_AWS_SECRET>
  
  # Database credentials
  POSTGRES_USER: <BASE64_ENCODED_DB_USER>
  POSTGRES_PASSWORD: <BASE64_ENCODED_DB_PASSWORD>
  
  # MLflow credentials
  MLFLOW_S3_ENDPOINT_URL: <BASE64_ENCODED_S3_ENDPOINT>
  MLFLOW_TRACKING_USERNAME: <BASE64_ENCODED_USERNAME>
  MLFLOW_TRACKING_PASSWORD: <BASE64_ENCODED_PASSWORD>
  
  # Grafana admin credentials
  GF_SECURITY_ADMIN_PASSWORD: <BASE64_ENCODED_GRAFANA_PASSWORD>
  
  # TLS certificates
  TLS_CERT: <BASE64_ENCODED_TLS_CERT>
  TLS_KEY: <BASE64_ENCODED_TLS_KEY>
  
# Example commands to create secrets:
# kubectl create secret generic quantum-secrets \
#   --from-literal=IBM_QUANTUM_TOKEN="your-token" \
#   --from-literal=AWS_ACCESS_KEY_ID="your-key" \
#   --from-literal=AWS_SECRET_ACCESS_KEY="your-secret" \
#   --namespace=quantum-mlops